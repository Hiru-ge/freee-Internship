<div class="container">
  <div class="login-container">
    <h1>勤怠管理システム</h1>
    <h2>パスワードを忘れた場合</h2>
    
    <div id="password-reset-section">
      <p>認証コードを正しく認識できました。新しいパスワードを設定してください。</p>
      
      
      <%= form_with url: reset_password_auth_path, method: :post, local: true, id: "password-reset-form" do |form| %>
        <%= form.hidden_field :employee_id, value: @employee_id %>
        <%= form.hidden_field :code, value: @verification_code %>
        
        <div class="form-group">
          <%= form.label :new_password, "新しいパスワード:" %>
          <%= form.password_field :new_password, 
              placeholder: "新しいパスワードを入力", 
              required: true, 
              id: "new-password" %>
          <div class="password-requirements">
            <small>パスワード要件:</small>
            <ul>
              <li>8文字以上</li>
              <li>英字と数字を含む</li>
              <li>特殊文字を含む（推奨）</li>
            </ul>
          </div>
        </div>
        
        <div class="form-group">
          <%= form.label :confirm_password, "パスワード（確認）:" %>
          <%= form.password_field :confirm_password, 
              placeholder: "パスワードを再入力", 
              required: true, 
              id: "confirm-password" %>
        </div>
        
        <div class="form-actions">
          <%= form.submit "パスワードを再設定", class: "button primary" %>
          <%= link_to "戻る", verify_password_reset_auth_path(employee_id: @employee_id), class: "button secondary" %>
        </div>
      <% end %>
    </div>
    
    <div class="login-links">
      <%= link_to "ログイン画面に戻る", login_auth_path, class: "link" %>
    </div>
  </div>
</div>

<script>
  // ページ読み込み時の初期化
  document.addEventListener('DOMContentLoaded', function() {
    setupFormHandler();
  });
  
  function setupFormHandler() {
    const form = document.getElementById('password-reset-form');
    if (form) {
      form.addEventListener('submit', function(e) {
        const newPassword = document.getElementById('new-password').value;
        const confirmPassword = document.getElementById('confirm-password').value;
        
        // パスワードバリデーション
        if (!validatePassword(newPassword)) {
          e.preventDefault();
          if (window.messageHandler) {
            window.messageHandler.show('パスワードが要件を満たしていません。8文字以上で英字と数字を含む必要があります。', 'error');
          } else {
            alert('パスワードが要件を満たしていません。\n・8文字以上\n・英字と数字を含む');
          }
          document.getElementById('new-password').focus();
          return false;
        }
        
        if (newPassword !== confirmPassword) {
          e.preventDefault();
          if (window.messageHandler) {
            window.messageHandler.show('パスワードが一致しません。', 'error');
          } else {
            alert('パスワードが一致しません。');
          }
          document.getElementById('confirm-password').focus();
          return false;
        }
      });
    }
  }
  
  // パスワードバリデーション
  function validatePassword(password) {
    if (password.length < 8) return false;
    if (!/[a-zA-Z]/.test(password)) return false;
    if (!/[0-9]/.test(password)) return false;
    return true;
  }
</script>
