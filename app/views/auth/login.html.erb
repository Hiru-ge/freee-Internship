<div class="container">
  <div class="login-container">
    <h1>勤怠管理システム</h1>
    <h2>ログイン</h2>

    <%= form_with url: auth_login_path, method: :post, local: true, id: "login-form" do |form| %>
      <div class="form-group">
        <%= form.label :employee_id, "従業員を選択してください:" %>
        <%= form.select :employee_id,
            options_for_select((@employees || []).map { |emp| [emp["display_name"], emp["id"]] }, params[:employee_id]),
            { prompt: "-- 従業員を選択 --" },
            { required: true, id: "employee-select" } %>
      </div>

      <div class="form-group">
        <%= form.label :password, "パスワード:" %>
        <%= form.password_field :password, required: true, id: "password", placeholder: "パスワードを入力してください" %>
      </div>

      <div class="form-actions">
        <%= form.submit "ログイン", class: "button" %>
      </div>
    <% end %>

    <div class="login-links">
      <%= link_to "パスワードを忘れた場合", password_forgot_path, class: "link" %>
      <%= link_to "初回パスワード設定", password_initial_path, class: "link" %>
    </div>

  </div>
</div>

<script>
  // ページ読み込み時の初期化
  document.addEventListener('DOMContentLoaded', function() {
    setupFormHandler();
  });

  // フォームハンドラーの設定
  function setupFormHandler() {
    document.getElementById('login-form').addEventListener('submit', function(e) {
      const employeeId = document.getElementById('employee-select').value;
      const password = document.getElementById('password').value;

      if (!employeeId) {
        e.preventDefault();
        showMessage('従業員を選択してください', 'error');
        return;
      }

      if (!password) {
        e.preventDefault();
        showMessage('パスワードを入力してください', 'error');
        return;
      }

      // ローディング表示
      if (window.loadingHandler) {
        window.loadingHandler.show('ログイン処理中...');
      } else {
        // フォールバック
        const submitButton = document.querySelector('button[type="submit"]');
        submitButton.disabled = true;
        submitButton.textContent = 'ログイン中...';
      }
    });
  }

  function showMessage(message, type) {
    if (window.messageHandler) {
      return window.messageHandler.show(message, type);
    }
  }
</script>
