<!DOCTYPE html>
<html>
  <head>
    <title><%= content_for(:title) || "Freee Internship" %></title>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="mobile-web-app-capable" content="yes">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <%= yield :head %>

    <%# Enable PWA manifest for installable apps (make sure to enable in config/routes.rb too!) %>
    <%#= tag.link rel: "manifest", href: pwa_manifest_path(format: :json) %>

    <link rel="icon" href="/icon.png" type="image/png">
    <link rel="icon" href="/icon.svg" type="image/svg+xml">
    <link rel="apple-touch-icon" href="/icon.png">

    <%# Includes all stylesheet files in app/assets/stylesheets %>
    <%= stylesheet_link_tag :app, "data-turbo-track": "reload" %>
    
    <%# 統一されたメッセージ表示システム（最初に読み込み） %>
    <%= javascript_include_tag 'message_handler' %>
    
    <%# 統一されたローディング表示システム %>
    <%= javascript_include_tag 'loading_handler' %>
    
    <%= javascript_importmap_tags %>
  </head>

  <body>
    <%= yield %>
    
    <!-- フラッシュメッセージをトースト形式で表示 -->
    <script>
      function showFlashMessage(message, type) {
        // MessageHandlerが利用可能な場合はそれを使用
        if (window.messageHandler) {
          window.messageHandler.show(message, type);
        } else {
          // フォールバック: 簡易トースト形式
          createFallbackToast(message, type);
        }
      }
      
      function createFallbackToast(message, type) {
        // 簡易トースト通知を作成
        const toast = document.createElement('div');
        toast.style.cssText = `
          position: fixed;
          top: 20px;
          right: 20px;
          background-color: ${type === 'error' ? '#f44336' : type === 'success' ? '#4caf50' : '#2196f3'};
          color: white;
          padding: 12px 16px;
          border-radius: 8px;
          box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
          z-index: 1000;
          max-width: 400px;
          animation: slideInRight 0.3s ease-out;
          cursor: pointer;
        `;
        toast.textContent = message;
        
        // アニメーション用のCSSを追加
        if (!document.getElementById('toast-animations')) {
          const style = document.createElement('style');
          style.id = 'toast-animations';
          style.textContent = `
            @keyframes slideInRight {
              from {
                transform: translateX(100%);
                opacity: 0;
              }
              to {
                transform: translateX(0);
                opacity: 1;
              }
            }
            @keyframes slideOutRight {
              from {
                transform: translateX(0);
                opacity: 1;
              }
              to {
                transform: translateX(100%);
                opacity: 0;
              }
            }
          `;
          document.head.appendChild(style);
        }
        
        document.body.appendChild(toast);
        
        // クリックで閉じる
        toast.addEventListener('click', () => {
          toast.style.animation = 'slideOutRight 0.3s ease-out';
          setTimeout(() => {
            if (toast.parentNode) {
              toast.parentNode.removeChild(toast);
            }
          }, 300);
        });
        
        // 5秒後に自動で閉じる
        setTimeout(() => {
          if (toast.parentNode) {
            toast.style.animation = 'slideOutRight 0.3s ease-out';
            setTimeout(() => {
              if (toast.parentNode) {
                toast.parentNode.removeChild(toast);
              }
            }, 300);
          }
        }, 5000);
      }
      
      document.addEventListener('DOMContentLoaded', function() {
        // フラッシュメッセージを即座にトースト形式で表示
        setTimeout(function() {
          try {
            <% if flash[:notice] %>
              showFlashMessage('<%= j(flash[:notice]) %>', 'success');
            <% end %>
            
            <% if flash[:alert] %>
              showFlashMessage('<%= j(flash[:alert]) %>', 'error');
            <% end %>
            
            <% if flash[:error] %>
              showFlashMessage('<%= j(flash[:error]) %>', 'error');
            <% end %>
            
            <% if flash[:success] %>
              showFlashMessage('<%= j(flash[:success]) %>', 'success');
            <% end %>
          } catch (error) {
            console.error('フラッシュメッセージ表示エラー:', error);
            // フォールバック: アラートで表示
            <% if flash[:notice] %>
              alert('<%= j(flash[:notice]) %>');
            <% end %>
            <% if flash[:alert] %>
              alert('<%= j(flash[:alert]) %>');
            <% end %>
            <% if flash[:error] %>
              alert('<%= j(flash[:error]) %>');
            <% end %>
            <% if flash[:success] %>
              alert('<%= j(flash[:success]) %>');
            <% end %>
          }
        }, 100); // 100ms遅延で他のスクリプトの初期化を待つ
      });
    </script>
  </body>
</html>
